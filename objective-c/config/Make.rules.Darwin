# **********************************************************************
#
# Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************

#
# This file is included by Make.rules when uname is Darwin.
#

OSX_TARGET_MIN_SDK_VERSION = 10.9

CC     		= xcrun clang
CXX    		= xcrun clang++

CPPFLAGS	+= -pthread -fvisibility=hidden
OBJCFLAGS	+= -Wall -Werror -mmacosx-version-min=$(OSX_TARGET_MIN_SDK_VERSION)

#
# By default we build x86_64 binaries.
#
ifeq ($(OBJCARCHFLAGS),)
OBJCARCHFLAGS   := -arch x86_64
endif

ifeq ($(OPTIMIZE),yes)
     OBJCFLAGS	:= $(OBJCARCHFLAGS) -O2 -DNDEBUG $(OBJCFLAGS)
else
     OBJCFLAGS	:= $(OBJCARCHFLAGS) -g $(OBJCFLAGS)
endif

LOADER_PATH = @loader_path

ifeq ($(RPATH_DIR),)
    ifdef ice_src_dist
        RPATH_DIR = @loader_path/$(libdir)
    else
        RPATH_DIR = $(ice_dir)/$(libsubdir)
    endif
endif

#
# Clear rpath setting when doing a system install
#
ifeq ($(ice_dir),/usr)
    RPATH_DIR =
endif

ifneq ($(RPATH_DIR),)
    LDEXEFLAGS		= -Wl,-rpath,$(RPATH_DIR)
    ifndef ice_src_dist
        LDEXEFLAGS += -Wl,-rpath,@loader_path/$(testlibdir)
    endif
endif

ifdef ice_src_dist
rpathlink	= -Wl,-rpath,$(1)
endif

#
# Enable ARC for targets in demo/ and test/ subdirectories
# when COMPILE_WITH_ARC is defined.
#
ifneq ($(findstring demo/,${CURDIR}),)
TARGET_SUPPORT_ARC = yes
endif

ifneq ($(findstring test/,${CURDIR}),)
TARGET_SUPPORT_ARC = yes
endif

ifeq ($(TARGET_SUPPORT_ARC),yes)
    ifeq ($(COMPILE_WITH_ARC),yes)
        #
        # Don't add these to OBJCFLAGS flex and bison generated files used in
        # some demos doesn't support ARC.
        #
		ARCFLAGS = -fobjc-arc -fobjc-arc-exceptions
    endif
endif

mklib 		= libtool -static -o $(1) $(2)
mkshlib		= $(CXX)  -dynamiclib $(LDFLAGS) -o $(1) -install_name @rpath/$(2) $(3) $(4)

BASELIBS	= -L$(ice_cpp_dir)/$(libsubdir) -lIce -lIceUtil -framework Foundation
LIBS		= -lIceObjC$(libsuffix) -framework Foundation
ICESSL_LIBS = -lIceSSLObjC$(libsuffix)
TEST_LIBS	= -lTestCommon $(LIBS)
